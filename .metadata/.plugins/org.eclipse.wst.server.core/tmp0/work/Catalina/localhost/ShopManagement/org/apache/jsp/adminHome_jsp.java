/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.24
 * Generated at: 2024-11-14 18:04:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.hibernate.internal.build.AllowSysOut;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.Connection;

public final class adminHome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("org.hibernate.internal.build.AllowSysOut");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");

String email = (String) session.getAttribute("email");
String password = (String) session.getAttribute("password");

if (email == null || password == null) {
    RequestDispatcher rd = request.getRequestDispatcher("adminLogin.jsp");
    request.setAttribute("error", "Logged Out");
    rd.forward(request, response);
} else {
    try {
        Class.forName("org.postgresql.Driver");
        Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/shopkeeper?user=postgres&password=root");
        PreparedStatement ps = con.prepareStatement("select * from users where user_email=?");
        ps.setString(1, email);
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            String dbPassword = rs.getString("user_password");
            if (password.equals(dbPassword)) {
            	System.out.println("Admin Logged in");


      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Admin Home</title>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	font-family: Arial, sans-serif;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	background-color: #f9f9f9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".admin-container {\r\n");
      out.write("	max-width: 1200px;\r\n");
      out.write("	margin: 40px auto;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".admin-header {\r\n");
      out.write("	background-color: #337ab7;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	padding: 30px 10px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border-bottom: 1px solid #337ab7;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".admin-header h1 {\r\n");
      out.write("	margin-top: 0;\r\n");
      out.write("	font-size: 24px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logout-button {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 10px;\r\n");
      out.write("	right: 10px;\r\n");
      out.write("	background-color: #e74c3c;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logout-button:hover {\r\n");
      out.write("	background-color: #c0392b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card-container {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-wrap: wrap;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card {\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	margin: 20px;\r\n");
      out.write("	width: calc(50% - 40px);\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card h2 {\r\n");
      out.write("	margin-top: 0;\r\n");
      out.write("	color: #337ab7;\r\n");
      out.write("	font-size: 18px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card p {\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	color: #666;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	background-color: #337ab7;\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	max-width: 150px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card a:hover {\r\n");
      out.write("	background-color: #23527c;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".admin-footer {\r\n");
      out.write("	background-color: #f0f0f0;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	clear: both;\r\n");
      out.write("	border-top: 1px solid #ddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".admin-footer p {\r\n");
      out.write("	margin-bottom: 0;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"admin-container\">\r\n");
      out.write("		<div class=\"admin-header\">\r\n");
      out.write("			<h1>Welcome to the Admin Dashboard</h1>\r\n");
      out.write("			<p>This is the central hub for managing your application's data.</p>\r\n");
      out.write("			<a href=\"logout\" class=\"logout-button\">Logout</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"card-container\">\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<h2>View All Products</h2>\r\n");
      out.write("				<p>View all products in the database, including product information and transaction history.</p>\r\n");
      out.write("				<a href=\"viewData.jsp\" class=\"btn\">View All Products</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<h2>Add New Product</h2>\r\n");
      out.write("				<p>Add new product to the database, including product information and transaction history.</p>\r\n");
      out.write("				<a href=\"addData.jsp\" class=\"btn\">Add New Product</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<h2>Remove Product</h2>\r\n");
      out.write("				<p>Remove product from the database, including product information and transaction history.</p>\r\n");
      out.write("				<a href=\"removeData.jsp\" class=\"btn\">Remove Product</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<h2>Update Product</h2>\r\n");
      out.write("				<p>Update product in the database, including product information and transaction history.</p>\r\n");
      out.write("				<a href=\"updateData.jsp\" class=\"btn\">Update Product</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<h2>Category Management</h2>\r\n");
      out.write("				<p>Manage categories, including adding, removing, and updating categories.</p>\r\n");
      out.write("				<a href=\"categoryManagement.jsp\" class=\"btn\">Category Management</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"admin-footer\">\r\n");
      out.write("			<p>Made With ❤ &copy; 2024 GloceryNow</p>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");

            } else {
                RequestDispatcher rd = request.getRequestDispatcher("adminLogin.jsp");
                request.setAttribute("error", "Invalid email or password");
                rd.forward(request, response);
            }
        } else {
            RequestDispatcher rd = request.getRequestDispatcher("adminLogin.jsp");
            request.setAttribute("error", "Invalid email or password");
            rd.forward(request, response);
        }
    } catch (ClassNotFoundException | SQLException e) {
        e.printStackTrace();
    }
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
