/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.24
 * Generated at: 2024-11-14 18:05:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>GroceryNow - Login</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("@charset \"UTF-8\";\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	font-family: sans-serif;\r\n");
      out.write("	line-height: 1.5;\r\n");
      out.write("	min-height: 100vh;\r\n");
      out.write("	background: #f3f3f3;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main {\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	border-radius: 15px;\r\n");
      out.write("	box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	transition: transform 0.2s;\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("	color: #4CAF50;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label {\r\n");
      out.write("	display: block;\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	margin-bottom: 5px;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	color: #555;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	float: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input {\r\n");
      out.write("	display: block;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin-bottom: 15px;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("	padding: 15px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	margin-top: 15px;\r\n");
      out.write("	margin-bottom: 15px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	background-color: #4CAF50;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wrap {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".options {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn {\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	background-color: #4CAF50;\r\n");
      out.write("	width: 45%;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	margin: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn:hover {\r\n");
      out.write("	background-color: #3e8e41;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pass {\r\n");
      out.write("	width: 70px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	color: #ffffff; \r\n");
      out.write("	background-color : #3498db;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	margin: 10px;\r\n");
      out.write("	float: right;\r\n");
      out.write("	background-color: #3498db;\r\n");
      out.write("	border: 1px solid #2ecc71;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pass:hover {\r\n");
      out.write("	background-color: #2ecc71;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pass:focus {\r\n");
      out.write("	outline: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"main\">\r\n");
      out.write("		<h1>GroceryNow</h1>\r\n");
      out.write("		<h3>Login</h3>\r\n");
      out.write("		<form action=\"login\" method=\"post\">\r\n");
      out.write("			<label for=\"email\">Email:</label> <input type=\"email\" id=\"email\"\r\n");
      out.write("				name=\"em\" required> <label for=\"password\">Password:</label>\r\n");
      out.write("			<button class=\"pass\" id=\"pass1\"\r\n");
      out.write("				onclick=\"showPass('password','pass1')\" type=\"button\">show</button>\r\n");
      out.write("			<input type=\"password\" id=\"password\" name=\"ps\" required>\r\n");
      out.write("			<p style=\"color: red;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${error}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("			<button type=\"submit\">Login</button>\r\n");
      out.write("		</form>\r\n");
      out.write("		<p>\r\n");
      out.write("			Not registered? <a href=\"register.jsp\">Create an account</a>\r\n");
      out.write("		</p>\r\n");
      out.write("		<button class=\"btn\" onclick=\"location.href='index.jsp'\">");
      out.print("<");
      out.write("</button>\r\n");
      out.write("		<button class=\"btn\" onclick=\"location.href='login.jsp'\">&#10227;</button>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		function showPass(id1, id2) {\r\n");
      out.write("			var x = document.getElementById(id1);\r\n");
      out.write("			if (x.type === \"password\") {\r\n");
      out.write("				x.type = \"text\";\r\n");
      out.write("				document.getElementById(id2).innerHTML = 'hide';\r\n");
      out.write("			} else {\r\n");
      out.write("				x.type = \"password\";\r\n");
      out.write("				document.getElementById(id2).innerHTML = 'show';\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
